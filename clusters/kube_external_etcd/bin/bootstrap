#!/usr/bin/env bash

readonly bold=$(tput bold)
readonly red=$(tput setaf 1)
readonly green=$(tput setaf 148)
readonly normal=$(tput sgr0)

set -xe

readonly cluster="staging"
readonly region="ap-northeast-1"
readonly etc_ip="10.128.0.11"

terraform init

aws ec2 describe-instances --region $region \
                           --filters 'Name=tag-key,Values=Cluster' "Name=tag-value,Values=${cluster}" 'Name=instance-state-name,Values=running' \
                           --query "Reservations[*].Instances[*].[PrivateDnsName,Tags[?Key=='Role']| [0].Value]" \
                           --output table

terraform apply -target=aws_key_pair.k8s

echo "${bold}${green}Destroing old cluster...${normal}"
terraform destroy -auto-approve -target=module.k8s_master.aws_instance.masters -target=module.k8s_node.aws_autoscaling_group.node -target=module.k8s_node.aws_launch_configuration.node
ssh -t $etc_ip 'ETCDCTL_API=3 etcdctl del --prefix /'$cluster

echo "${bold}${green}Generating TLS certificates...${normal}"
rm -fr ./assets/${cluster}
terraform taint -module=k8s_master.certificates null_resource.generate_pki || true
terraform taint -module=k8s_master.certificates null_resource.extract_admin_key  || true
terraform apply -auto-approve \
            -target=module.k8s_master.module.certificates.null_resource.generate_pki \
            -target=module.k8s_master.module.certificates.null_resource.extract_admin_key

echo "${bold}${green}Initializing first master...${normal}"
terraform apply -auto-approve \
            -target="module.k8s_master.aws_instance.masters[0]" \
            -target="module.k8s_master.null_resource.bootstrap_public[0]"

aws ec2 describe-instances --region "$region" \
                           --filters 'Name=tag-key,Values=Cluster' "Name=tag-value,Values=${cluster}" 'Name=instance-state-name,Values=running' \
                           --query "Reservations[*].Instances[*].[PrivateDnsName,Tags[?Key=='Role']| [0].Value]" \
                           --output table

echo "${bold}${green}Updating domain name for new master ips...${normal}"
terraform apply -auto-approve -target=module.k8s_master.aws_route53_record.api

echo "${bold}${green}Check master nodes...${normal}"
readonly domain=$(terraform output domain)
sed -i .bak 's/server: https:\/\/.*:6443/server: https:\/\/'$domain':6443/' "./assets/$cluster/admin.conf"
sed -i .bak 's/server: https:\/\/.*:6443/server: https:\/\/'$domain':6443/' "./assets/$cluster/user.conf"

for i in `seq 5 1`
do
  sleep $[ $i * 10 ]
  curl -f -k https://$domain:6443/healthz --retry 3 --retry-delay 1 && break || true
done

kubectl --kubeconfig ./assets/$cluster/admin.conf get no -o wide

echo "${bold}${green}Initializing other masters...${normal}"
terraform apply -auto-approve -target=module.k8s_master.null_resource.bootstrap_public

echo "${bold}${green}Initializing slaves...${normal}"
terraform apply -auto-approve -target=module.k8s_node.aws_autoscaling_group.node -target=module.k8s_node.aws_launch_configuration.node

kubectl --kubeconfig ./assets/$cluster/admin.conf get no -o wide
