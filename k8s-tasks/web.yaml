apiVersion: v1
kind: Service
metadata:
  name: web
  labels:
    app: web
spec:
  # NodePort: Exposes the service on each Node’s IP at a static port (the NodePort). A ClusterIP service, to which the NodePort service will route, is automatically created. You’ll be able to contact the NodePort service, from outside the cluster, by requesting <NodeIP>:<NodePort>
  type: NodePort
  ports:
  - name: web
    protocol: TCP
    port: 80
    targetPort: 80
  selector:
    app: web

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: web
  namespace: default
spec:
  replicas: 3
  revisionHistoryLimit: 20
  selector:
    matchLabels:
      app: web
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: web
      name: web
    spec:
      hostNetwork: true
      containers:
      - image: nginx
        ports:
          - name: web-port
            containerPort: 80
        imagePullPolicy: Always
        name: web
        resources: {}
        securityContext:
          privileged: false
        terminationMessagePath: /dev/termination-log
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
